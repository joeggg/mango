// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: usermessages.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EBaseUserMessages int32

const (
	EBaseUserMessages_UM_AchievementEvent        EBaseUserMessages = 101
	EBaseUserMessages_UM_CloseCaption            EBaseUserMessages = 102
	EBaseUserMessages_UM_CloseCaptionDirect      EBaseUserMessages = 103
	EBaseUserMessages_UM_CurrentTimescale        EBaseUserMessages = 104
	EBaseUserMessages_UM_DesiredTimescale        EBaseUserMessages = 105
	EBaseUserMessages_UM_Fade                    EBaseUserMessages = 106
	EBaseUserMessages_UM_GameTitle               EBaseUserMessages = 107
	EBaseUserMessages_UM_HintText                EBaseUserMessages = 109
	EBaseUserMessages_UM_HudMsg                  EBaseUserMessages = 110
	EBaseUserMessages_UM_HudText                 EBaseUserMessages = 111
	EBaseUserMessages_UM_KeyHintText             EBaseUserMessages = 112
	EBaseUserMessages_UM_ColoredText             EBaseUserMessages = 113
	EBaseUserMessages_UM_RequestState            EBaseUserMessages = 114
	EBaseUserMessages_UM_ResetHUD                EBaseUserMessages = 115
	EBaseUserMessages_UM_Rumble                  EBaseUserMessages = 116
	EBaseUserMessages_UM_SayText                 EBaseUserMessages = 117
	EBaseUserMessages_UM_SayText2                EBaseUserMessages = 118
	EBaseUserMessages_UM_SayTextChannel          EBaseUserMessages = 119
	EBaseUserMessages_UM_Shake                   EBaseUserMessages = 120
	EBaseUserMessages_UM_ShakeDir                EBaseUserMessages = 121
	EBaseUserMessages_UM_TextMsg                 EBaseUserMessages = 124
	EBaseUserMessages_UM_ScreenTilt              EBaseUserMessages = 125
	EBaseUserMessages_UM_Train                   EBaseUserMessages = 126
	EBaseUserMessages_UM_VGUIMenu                EBaseUserMessages = 127
	EBaseUserMessages_UM_VoiceMask               EBaseUserMessages = 128
	EBaseUserMessages_UM_VoiceSubtitle           EBaseUserMessages = 129
	EBaseUserMessages_UM_SendAudio               EBaseUserMessages = 130
	EBaseUserMessages_UM_ItemPickup              EBaseUserMessages = 131
	EBaseUserMessages_UM_AmmoDenied              EBaseUserMessages = 132
	EBaseUserMessages_UM_CrosshairAngle          EBaseUserMessages = 133
	EBaseUserMessages_UM_ShowMenu                EBaseUserMessages = 134
	EBaseUserMessages_UM_CreditsMsg              EBaseUserMessages = 135
	EBaseUserMessages_UM_CloseCaptionPlaceholder EBaseUserMessages = 142
	EBaseUserMessages_UM_CameraTransition        EBaseUserMessages = 143
	EBaseUserMessages_UM_AudioParameter          EBaseUserMessages = 144
	EBaseUserMessages_UM_ParticleManager         EBaseUserMessages = 145
	EBaseUserMessages_UM_HudError                EBaseUserMessages = 146
	EBaseUserMessages_UM_CustomGameEvent         EBaseUserMessages = 148
	EBaseUserMessages_UM_AnimGraphUpdate         EBaseUserMessages = 149
	EBaseUserMessages_UM_HapticsManagerPulse     EBaseUserMessages = 150
	EBaseUserMessages_UM_HapticsManagerEffect    EBaseUserMessages = 151
	EBaseUserMessages_UM_MAX_BASE                EBaseUserMessages = 200
)

// Enum value maps for EBaseUserMessages.
var (
	EBaseUserMessages_name = map[int32]string{
		101: "UM_AchievementEvent",
		102: "UM_CloseCaption",
		103: "UM_CloseCaptionDirect",
		104: "UM_CurrentTimescale",
		105: "UM_DesiredTimescale",
		106: "UM_Fade",
		107: "UM_GameTitle",
		109: "UM_HintText",
		110: "UM_HudMsg",
		111: "UM_HudText",
		112: "UM_KeyHintText",
		113: "UM_ColoredText",
		114: "UM_RequestState",
		115: "UM_ResetHUD",
		116: "UM_Rumble",
		117: "UM_SayText",
		118: "UM_SayText2",
		119: "UM_SayTextChannel",
		120: "UM_Shake",
		121: "UM_ShakeDir",
		124: "UM_TextMsg",
		125: "UM_ScreenTilt",
		126: "UM_Train",
		127: "UM_VGUIMenu",
		128: "UM_VoiceMask",
		129: "UM_VoiceSubtitle",
		130: "UM_SendAudio",
		131: "UM_ItemPickup",
		132: "UM_AmmoDenied",
		133: "UM_CrosshairAngle",
		134: "UM_ShowMenu",
		135: "UM_CreditsMsg",
		142: "UM_CloseCaptionPlaceholder",
		143: "UM_CameraTransition",
		144: "UM_AudioParameter",
		145: "UM_ParticleManager",
		146: "UM_HudError",
		148: "UM_CustomGameEvent",
		149: "UM_AnimGraphUpdate",
		150: "UM_HapticsManagerPulse",
		151: "UM_HapticsManagerEffect",
		200: "UM_MAX_BASE",
	}
	EBaseUserMessages_value = map[string]int32{
		"UM_AchievementEvent":        101,
		"UM_CloseCaption":            102,
		"UM_CloseCaptionDirect":      103,
		"UM_CurrentTimescale":        104,
		"UM_DesiredTimescale":        105,
		"UM_Fade":                    106,
		"UM_GameTitle":               107,
		"UM_HintText":                109,
		"UM_HudMsg":                  110,
		"UM_HudText":                 111,
		"UM_KeyHintText":             112,
		"UM_ColoredText":             113,
		"UM_RequestState":            114,
		"UM_ResetHUD":                115,
		"UM_Rumble":                  116,
		"UM_SayText":                 117,
		"UM_SayText2":                118,
		"UM_SayTextChannel":          119,
		"UM_Shake":                   120,
		"UM_ShakeDir":                121,
		"UM_TextMsg":                 124,
		"UM_ScreenTilt":              125,
		"UM_Train":                   126,
		"UM_VGUIMenu":                127,
		"UM_VoiceMask":               128,
		"UM_VoiceSubtitle":           129,
		"UM_SendAudio":               130,
		"UM_ItemPickup":              131,
		"UM_AmmoDenied":              132,
		"UM_CrosshairAngle":          133,
		"UM_ShowMenu":                134,
		"UM_CreditsMsg":              135,
		"UM_CloseCaptionPlaceholder": 142,
		"UM_CameraTransition":        143,
		"UM_AudioParameter":          144,
		"UM_ParticleManager":         145,
		"UM_HudError":                146,
		"UM_CustomGameEvent":         148,
		"UM_AnimGraphUpdate":         149,
		"UM_HapticsManagerPulse":     150,
		"UM_HapticsManagerEffect":    151,
		"UM_MAX_BASE":                200,
	}
)

func (x EBaseUserMessages) Enum() *EBaseUserMessages {
	p := new(EBaseUserMessages)
	*p = x
	return p
}

func (x EBaseUserMessages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBaseUserMessages) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[0].Descriptor()
}

func (EBaseUserMessages) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[0]
}

func (x EBaseUserMessages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBaseUserMessages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBaseUserMessages(num)
	return nil
}

// Deprecated: Use EBaseUserMessages.Descriptor instead.
func (EBaseUserMessages) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{0}
}

type EBaseEntityMessages int32

const (
	EBaseEntityMessages_EM_PlayJingle      EBaseEntityMessages = 136
	EBaseEntityMessages_EM_ScreenOverlay   EBaseEntityMessages = 137
	EBaseEntityMessages_EM_RemoveAllDecals EBaseEntityMessages = 138
	EBaseEntityMessages_EM_PropagateForce  EBaseEntityMessages = 139
	EBaseEntityMessages_EM_DoSpark         EBaseEntityMessages = 140
	EBaseEntityMessages_EM_FixAngle        EBaseEntityMessages = 141
)

// Enum value maps for EBaseEntityMessages.
var (
	EBaseEntityMessages_name = map[int32]string{
		136: "EM_PlayJingle",
		137: "EM_ScreenOverlay",
		138: "EM_RemoveAllDecals",
		139: "EM_PropagateForce",
		140: "EM_DoSpark",
		141: "EM_FixAngle",
	}
	EBaseEntityMessages_value = map[string]int32{
		"EM_PlayJingle":      136,
		"EM_ScreenOverlay":   137,
		"EM_RemoveAllDecals": 138,
		"EM_PropagateForce":  139,
		"EM_DoSpark":         140,
		"EM_FixAngle":        141,
	}
)

func (x EBaseEntityMessages) Enum() *EBaseEntityMessages {
	p := new(EBaseEntityMessages)
	*p = x
	return p
}

func (x EBaseEntityMessages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBaseEntityMessages) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[1].Descriptor()
}

func (EBaseEntityMessages) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[1]
}

func (x EBaseEntityMessages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBaseEntityMessages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBaseEntityMessages(num)
	return nil
}

// Deprecated: Use EBaseEntityMessages.Descriptor instead.
func (EBaseEntityMessages) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{1}
}

type EHapticPulseType int32

const (
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_LIGHT  EHapticPulseType = 0
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_MEDIUM EHapticPulseType = 1
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_STRONG EHapticPulseType = 2
)

// Enum value maps for EHapticPulseType.
var (
	EHapticPulseType_name = map[int32]string{
		0: "VR_HAND_HAPTIC_PULSE_LIGHT",
		1: "VR_HAND_HAPTIC_PULSE_MEDIUM",
		2: "VR_HAND_HAPTIC_PULSE_STRONG",
	}
	EHapticPulseType_value = map[string]int32{
		"VR_HAND_HAPTIC_PULSE_LIGHT":  0,
		"VR_HAND_HAPTIC_PULSE_MEDIUM": 1,
		"VR_HAND_HAPTIC_PULSE_STRONG": 2,
	}
)

func (x EHapticPulseType) Enum() *EHapticPulseType {
	p := new(EHapticPulseType)
	*p = x
	return p
}

func (x EHapticPulseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EHapticPulseType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[2].Descriptor()
}

func (EHapticPulseType) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[2]
}

func (x EHapticPulseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EHapticPulseType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EHapticPulseType(num)
	return nil
}

// Deprecated: Use EHapticPulseType.Descriptor instead.
func (EHapticPulseType) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{2}
}

type CUserMessageFade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *uint32 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	HoldTime *uint32 `protobuf:"varint,2,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	Flags    *uint32 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Color    *uint32 `protobuf:"fixed32,4,opt,name=color" json:"color,omitempty"`
}

func (x *CUserMessageFade) Reset() {
	*x = CUserMessageFade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageFade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageFade) ProtoMessage() {}

func (x *CUserMessageFade) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageFade.ProtoReflect.Descriptor instead.
func (*CUserMessageFade) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{0}
}

func (x *CUserMessageFade) GetDuration() uint32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageFade) GetHoldTime() uint32 {
	if x != nil && x.HoldTime != nil {
		return *x.HoldTime
	}
	return 0
}

func (x *CUserMessageFade) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CUserMessageFade) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type CUserMessageSayText2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entityindex *uint32 `protobuf:"varint,1,opt,name=entityindex" json:"entityindex,omitempty"`
	Chat        *bool   `protobuf:"varint,2,opt,name=chat" json:"chat,omitempty"`
	Messagename *string `protobuf:"bytes,3,opt,name=messagename" json:"messagename,omitempty"`
	Param1      *string `protobuf:"bytes,4,opt,name=param1" json:"param1,omitempty"`
	Param2      *string `protobuf:"bytes,5,opt,name=param2" json:"param2,omitempty"`
	Param3      *string `protobuf:"bytes,6,opt,name=param3" json:"param3,omitempty"`
	Param4      *string `protobuf:"bytes,7,opt,name=param4" json:"param4,omitempty"`
}

func (x *CUserMessageSayText2) Reset() {
	*x = CUserMessageSayText2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageSayText2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageSayText2) ProtoMessage() {}

func (x *CUserMessageSayText2) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageSayText2.ProtoReflect.Descriptor instead.
func (*CUserMessageSayText2) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{1}
}

func (x *CUserMessageSayText2) GetEntityindex() uint32 {
	if x != nil && x.Entityindex != nil {
		return *x.Entityindex
	}
	return 0
}

func (x *CUserMessageSayText2) GetChat() bool {
	if x != nil && x.Chat != nil {
		return *x.Chat
	}
	return false
}

func (x *CUserMessageSayText2) GetMessagename() string {
	if x != nil && x.Messagename != nil {
		return *x.Messagename
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam1() string {
	if x != nil && x.Param1 != nil {
		return *x.Param1
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam2() string {
	if x != nil && x.Param2 != nil {
		return *x.Param2
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam3() string {
	if x != nil && x.Param3 != nil {
		return *x.Param3
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam4() string {
	if x != nil && x.Param4 != nil {
		return *x.Param4
	}
	return ""
}

type CUserMessageTextMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dest  *uint32  `protobuf:"varint,1,opt,name=dest" json:"dest,omitempty"`
	Param []string `protobuf:"bytes,2,rep,name=param" json:"param,omitempty"`
}

func (x *CUserMessageTextMsg) Reset() {
	*x = CUserMessageTextMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageTextMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageTextMsg) ProtoMessage() {}

func (x *CUserMessageTextMsg) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageTextMsg.ProtoReflect.Descriptor instead.
func (*CUserMessageTextMsg) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{2}
}

func (x *CUserMessageTextMsg) GetDest() uint32 {
	if x != nil && x.Dest != nil {
		return *x.Dest
	}
	return 0
}

func (x *CUserMessageTextMsg) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

type CUserMessageResetHUD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserMessageResetHUD) Reset() {
	*x = CUserMessageResetHUD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageResetHUD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageResetHUD) ProtoMessage() {}

func (x *CUserMessageResetHUD) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageResetHUD.ProtoReflect.Descriptor instead.
func (*CUserMessageResetHUD) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{3}
}

type CUserMessageSendAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soundname *string `protobuf:"bytes,1,opt,name=soundname" json:"soundname,omitempty"`
	Stop      *bool   `protobuf:"varint,2,opt,name=stop" json:"stop,omitempty"`
}

func (x *CUserMessageSendAudio) Reset() {
	*x = CUserMessageSendAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageSendAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageSendAudio) ProtoMessage() {}

func (x *CUserMessageSendAudio) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageSendAudio.ProtoReflect.Descriptor instead.
func (*CUserMessageSendAudio) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{4}
}

func (x *CUserMessageSendAudio) GetSoundname() string {
	if x != nil && x.Soundname != nil {
		return *x.Soundname
	}
	return ""
}

func (x *CUserMessageSendAudio) GetStop() bool {
	if x != nil && x.Stop != nil {
		return *x.Stop
	}
	return false
}

type CUserMessageAudioParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParameterType *uint32  `protobuf:"varint,1,opt,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	NameHashCode  *uint32  `protobuf:"varint,2,opt,name=name_hash_code,json=nameHashCode" json:"name_hash_code,omitempty"`
	Value         *float32 `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	IntValue      *uint32  `protobuf:"varint,4,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
}

func (x *CUserMessageAudioParameter) Reset() {
	*x = CUserMessageAudioParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageAudioParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageAudioParameter) ProtoMessage() {}

func (x *CUserMessageAudioParameter) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageAudioParameter.ProtoReflect.Descriptor instead.
func (*CUserMessageAudioParameter) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{5}
}

func (x *CUserMessageAudioParameter) GetParameterType() uint32 {
	if x != nil && x.ParameterType != nil {
		return *x.ParameterType
	}
	return 0
}

func (x *CUserMessageAudioParameter) GetNameHashCode() uint32 {
	if x != nil && x.NameHashCode != nil {
		return *x.NameHashCode
	}
	return 0
}

func (x *CUserMessageAudioParameter) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *CUserMessageAudioParameter) GetIntValue() uint32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

type CUserMessageVoiceMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GamerulesMasks []uint32 `protobuf:"varint,1,rep,name=gamerules_masks,json=gamerulesMasks" json:"gamerules_masks,omitempty"`
	BanMasks       []uint32 `protobuf:"varint,2,rep,name=ban_masks,json=banMasks" json:"ban_masks,omitempty"`
	ModEnable      *bool    `protobuf:"varint,3,opt,name=mod_enable,json=modEnable" json:"mod_enable,omitempty"`
}

func (x *CUserMessageVoiceMask) Reset() {
	*x = CUserMessageVoiceMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageVoiceMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageVoiceMask) ProtoMessage() {}

func (x *CUserMessageVoiceMask) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageVoiceMask.ProtoReflect.Descriptor instead.
func (*CUserMessageVoiceMask) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{6}
}

func (x *CUserMessageVoiceMask) GetGamerulesMasks() []uint32 {
	if x != nil {
		return x.GamerulesMasks
	}
	return nil
}

func (x *CUserMessageVoiceMask) GetBanMasks() []uint32 {
	if x != nil {
		return x.BanMasks
	}
	return nil
}

func (x *CUserMessageVoiceMask) GetModEnable() bool {
	if x != nil && x.ModEnable != nil {
		return *x.ModEnable
	}
	return false
}

type CEntityMessagePlayJingle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityMsg *CEntityMsg `protobuf:"bytes,1,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessagePlayJingle) Reset() {
	*x = CEntityMessagePlayJingle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessagePlayJingle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessagePlayJingle) ProtoMessage() {}

func (x *CEntityMessagePlayJingle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessagePlayJingle.ProtoReflect.Descriptor instead.
func (*CEntityMessagePlayJingle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{7}
}

func (x *CEntityMessagePlayJingle) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CUserMessageHapticPulse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandId    *int32            `protobuf:"varint,1,opt,name=hand_id,json=handId" json:"hand_id,omitempty"`
	PulseType *EHapticPulseType `protobuf:"varint,2,opt,name=pulse_type,json=pulseType,enum=mango.EHapticPulseType,def=0" json:"pulse_type,omitempty"`
}

// Default values for CUserMessageHapticPulse fields.
const (
	Default_CUserMessageHapticPulse_PulseType = EHapticPulseType_VR_HAND_HAPTIC_PULSE_LIGHT
)

func (x *CUserMessageHapticPulse) Reset() {
	*x = CUserMessageHapticPulse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageHapticPulse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageHapticPulse) ProtoMessage() {}

func (x *CUserMessageHapticPulse) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageHapticPulse.ProtoReflect.Descriptor instead.
func (*CUserMessageHapticPulse) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{8}
}

func (x *CUserMessageHapticPulse) GetHandId() int32 {
	if x != nil && x.HandId != nil {
		return *x.HandId
	}
	return 0
}

func (x *CUserMessageHapticPulse) GetPulseType() EHapticPulseType {
	if x != nil && x.PulseType != nil {
		return *x.PulseType
	}
	return Default_CUserMessageHapticPulse_PulseType
}

type CEntityMessageScreenOverlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEffect *bool       `protobuf:"varint,1,opt,name=start_effect,json=startEffect" json:"start_effect,omitempty"`
	EntityMsg   *CEntityMsg `protobuf:"bytes,2,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageScreenOverlay) Reset() {
	*x = CEntityMessageScreenOverlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageScreenOverlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageScreenOverlay) ProtoMessage() {}

func (x *CEntityMessageScreenOverlay) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageScreenOverlay.ProtoReflect.Descriptor instead.
func (*CEntityMessageScreenOverlay) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{9}
}

func (x *CEntityMessageScreenOverlay) GetStartEffect() bool {
	if x != nil && x.StartEffect != nil {
		return *x.StartEffect
	}
	return false
}

func (x *CEntityMessageScreenOverlay) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageRemoveAllDecals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoveDecals *bool       `protobuf:"varint,1,opt,name=remove_decals,json=removeDecals" json:"remove_decals,omitempty"`
	EntityMsg    *CEntityMsg `protobuf:"bytes,2,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageRemoveAllDecals) Reset() {
	*x = CEntityMessageRemoveAllDecals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageRemoveAllDecals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageRemoveAllDecals) ProtoMessage() {}

func (x *CEntityMessageRemoveAllDecals) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageRemoveAllDecals.ProtoReflect.Descriptor instead.
func (*CEntityMessageRemoveAllDecals) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{10}
}

func (x *CEntityMessageRemoveAllDecals) GetRemoveDecals() bool {
	if x != nil && x.RemoveDecals != nil {
		return *x.RemoveDecals
	}
	return false
}

func (x *CEntityMessageRemoveAllDecals) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessagePropagateForce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Impulse   *CMsgVector `protobuf:"bytes,1,opt,name=impulse" json:"impulse,omitempty"`
	EntityMsg *CEntityMsg `protobuf:"bytes,2,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessagePropagateForce) Reset() {
	*x = CEntityMessagePropagateForce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessagePropagateForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessagePropagateForce) ProtoMessage() {}

func (x *CEntityMessagePropagateForce) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessagePropagateForce.ProtoReflect.Descriptor instead.
func (*CEntityMessagePropagateForce) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{11}
}

func (x *CEntityMessagePropagateForce) GetImpulse() *CMsgVector {
	if x != nil {
		return x.Impulse
	}
	return nil
}

func (x *CEntityMessagePropagateForce) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageDoSpark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin      *CMsgVector `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Entityindex *uint32     `protobuf:"varint,2,opt,name=entityindex" json:"entityindex,omitempty"`
	Radius      *float32    `protobuf:"fixed32,3,opt,name=radius" json:"radius,omitempty"`
	Color       *uint32     `protobuf:"fixed32,4,opt,name=color" json:"color,omitempty"`
	Beams       *uint32     `protobuf:"varint,5,opt,name=beams" json:"beams,omitempty"`
	Thick       *float32    `protobuf:"fixed32,6,opt,name=thick" json:"thick,omitempty"`
	Duration    *float32    `protobuf:"fixed32,7,opt,name=duration" json:"duration,omitempty"`
	EntityMsg   *CEntityMsg `protobuf:"bytes,8,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageDoSpark) Reset() {
	*x = CEntityMessageDoSpark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageDoSpark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageDoSpark) ProtoMessage() {}

func (x *CEntityMessageDoSpark) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageDoSpark.ProtoReflect.Descriptor instead.
func (*CEntityMessageDoSpark) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{12}
}

func (x *CEntityMessageDoSpark) GetOrigin() *CMsgVector {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *CEntityMessageDoSpark) GetEntityindex() uint32 {
	if x != nil && x.Entityindex != nil {
		return *x.Entityindex
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetRadius() float32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetBeams() uint32 {
	if x != nil && x.Beams != nil {
		return *x.Beams
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetThick() float32 {
	if x != nil && x.Thick != nil {
		return *x.Thick
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageFixAngle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relative  *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle     *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	EntityMsg *CEntityMsg `protobuf:"bytes,3,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageFixAngle) Reset() {
	*x = CEntityMessageFixAngle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageFixAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageFixAngle) ProtoMessage() {}

func (x *CEntityMessageFixAngle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageFixAngle.ProtoReflect.Descriptor instead.
func (*CEntityMessageFixAngle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{13}
}

func (x *CEntityMessageFixAngle) GetRelative() bool {
	if x != nil && x.Relative != nil {
		return *x.Relative
	}
	return false
}

func (x *CEntityMessageFixAngle) GetAngle() *CMsgQAngle {
	if x != nil {
		return x.Angle
	}
	return nil
}

func (x *CEntityMessageFixAngle) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CUserMsg_HudError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId *int32 `protobuf:"varint,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (x *CUserMsg_HudError) Reset() {
	*x = CUserMsg_HudError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_HudError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_HudError) ProtoMessage() {}

func (x *CUserMsg_HudError) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_HudError.ProtoReflect.Descriptor instead.
func (*CUserMsg_HudError) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{14}
}

func (x *CUserMsg_HudError) GetOrderId() int32 {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return 0
}

type CUserMsg_CustomGameEvent_ClientToServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName *string `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Data      []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *CUserMsg_CustomGameEvent_ClientToServer) Reset() {
	*x = CUserMsg_CustomGameEvent_ClientToServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_CustomGameEvent_ClientToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_CustomGameEvent_ClientToServer) ProtoMessage() {}

func (x *CUserMsg_CustomGameEvent_ClientToServer) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_CustomGameEvent_ClientToServer.ProtoReflect.Descriptor instead.
func (*CUserMsg_CustomGameEvent_ClientToServer) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{15}
}

func (x *CUserMsg_CustomGameEvent_ClientToServer) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

func (x *CUserMsg_CustomGameEvent_ClientToServer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CUserMsg_CustomGameEvent_ServerToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName *string `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Data      []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *CUserMsg_CustomGameEvent_ServerToClient) Reset() {
	*x = CUserMsg_CustomGameEvent_ServerToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_CustomGameEvent_ServerToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_CustomGameEvent_ServerToClient) ProtoMessage() {}

func (x *CUserMsg_CustomGameEvent_ServerToClient) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_CustomGameEvent_ServerToClient.ProtoReflect.Descriptor instead.
func (*CUserMsg_CustomGameEvent_ServerToClient) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{16}
}

func (x *CUserMsg_CustomGameEvent_ServerToClient) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

func (x *CUserMsg_CustomGameEvent_ServerToClient) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CUserMsg_TrackedControllerInput_ClientToServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CUserMsg_TrackedControllerInput_ClientToServer) Reset() {
	*x = CUserMsg_TrackedControllerInput_ClientToServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_TrackedControllerInput_ClientToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_TrackedControllerInput_ClientToServer) ProtoMessage() {}

func (x *CUserMsg_TrackedControllerInput_ClientToServer) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_TrackedControllerInput_ClientToServer.ProtoReflect.Descriptor instead.
func (*CUserMsg_TrackedControllerInput_ClientToServer) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{17}
}

func (x *CUserMsg_TrackedControllerInput_ClientToServer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_usermessages_proto protoreflect.FileDescriptor

var file_usermessages_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x1a, 0x16, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x10, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x61, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xce, 0x01, 0x0a,
	0x14, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x79,
	0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x22, 0x3f, 0x0a,
	0x13, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x16,
	0x0a, 0x14, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x48, 0x55, 0x44, 0x22, 0x49, 0x0a, 0x15, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x74, 0x6f,
	0x70, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x7c, 0x0a, 0x15, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x4c,
	0x0a, 0x18, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x4a, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x86, 0x01, 0x0a,
	0x17, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x70,
	0x74, 0x69, 0x63, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x52, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x45, 0x48,
	0x61, 0x70, 0x74, 0x69, 0x63, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x1a,
	0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x48, 0x41, 0x50, 0x54, 0x49, 0x43, 0x5f, 0x50,
	0x55, 0x4c, 0x53, 0x45, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x52, 0x09, 0x70, 0x75, 0x6c, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a, 0x1b, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4f, 0x76, 0x65,
	0x72, 0x6c, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x76, 0x0a, 0x1d, 0x43, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x12,
	0x30, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x22, 0x7d, 0x0a, 0x1c, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x22, 0x8c, 0x02, 0x0a, 0x15, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x68, 0x69, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22,
	0x8f, 0x01, 0x0a, 0x16, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x78, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x51, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12,
	0x30, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x43, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x22, 0x2e, 0x0a, 0x11, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x48, 0x75,
	0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x5c, 0x0a, 0x27, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x5c, 0x0a, 0x27, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a,
	0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x2a, 0xf3, 0x06, 0x0a, 0x11, 0x45, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4d, 0x5f,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x66, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4d, 0x5f, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x10, 0x67, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4d, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x10, 0x68, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x4d, 0x5f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x10, 0x69, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4d, 0x5f, 0x46, 0x61, 0x64, 0x65, 0x10,
	0x6a, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4d, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x10, 0x6b, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x48, 0x69, 0x6e, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x10, 0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4d, 0x5f, 0x48, 0x75, 0x64, 0x4d, 0x73,
	0x67, 0x10, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4d, 0x5f, 0x48, 0x75, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x10, 0x6f, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4d, 0x5f, 0x4b, 0x65, 0x79, 0x48, 0x69, 0x6e,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x10, 0x70, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4d, 0x5f, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x10, 0x71, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x4d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x72,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x48, 0x55, 0x44, 0x10,
	0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4d, 0x5f, 0x52, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x10, 0x74,
	0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4d, 0x5f, 0x53, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x10, 0x75,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x53, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x32, 0x10,
	0x76, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4d, 0x5f, 0x53, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x10, 0x77, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4d, 0x5f, 0x53,
	0x68, 0x61, 0x6b, 0x65, 0x10, 0x78, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x53, 0x68, 0x61,
	0x6b, 0x65, 0x44, 0x69, 0x72, 0x10, 0x79, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4d, 0x5f, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x73, 0x67, 0x10, 0x7c, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4d, 0x5f, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6c, 0x74, 0x10, 0x7d, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4d,
	0x5f, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x10, 0x7e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x56,
	0x47, 0x55, 0x49, 0x4d, 0x65, 0x6e, 0x75, 0x10, 0x7f, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4d, 0x5f,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x10, 0x80, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x55, 0x4d, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x10, 0x81, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4d, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x10, 0x82, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x4d, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x10, 0x83, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x4d,
	0x5f, 0x41, 0x6d, 0x6d, 0x6f, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x10, 0x84, 0x01, 0x12, 0x16,
	0x0a, 0x11, 0x55, 0x4d, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x68, 0x61, 0x69, 0x72, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x10, 0x85, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x53, 0x68, 0x6f,
	0x77, 0x4d, 0x65, 0x6e, 0x75, 0x10, 0x86, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x4d, 0x5f, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x4d, 0x73, 0x67, 0x10, 0x87, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x55, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x8e, 0x01, 0x12, 0x18, 0x0a,
	0x13, 0x55, 0x4d, 0x5f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x8f, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x4d, 0x5f, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x10, 0x90, 0x01, 0x12,
	0x17, 0x0a, 0x12, 0x55, 0x4d, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x91, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x48,
	0x75, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x92, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4d,
	0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x94, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4d, 0x5f, 0x41, 0x6e, 0x69, 0x6d, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x95, 0x01, 0x12, 0x1b, 0x0a, 0x16,
	0x55, 0x4d, 0x5f, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x10, 0x96, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x55, 0x4d, 0x5f,
	0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x10, 0x97, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x4d, 0x41,
	0x58, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0xc8, 0x01, 0x2a, 0x94, 0x01, 0x0a, 0x13, 0x45, 0x42,
	0x61, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x0d, 0x45, 0x4d, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x4a, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x10, 0x88, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x4d, 0x5f, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x10, 0x89, 0x01, 0x12, 0x17, 0x0a, 0x12,
	0x45, 0x4d, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x63, 0x61,
	0x6c, 0x73, 0x10, 0x8a, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x4d, 0x5f, 0x50, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x10, 0x8b, 0x01, 0x12, 0x0f, 0x0a,
	0x0a, 0x45, 0x4d, 0x5f, 0x44, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x10, 0x8c, 0x01, 0x12, 0x10,
	0x0a, 0x0b, 0x45, 0x4d, 0x5f, 0x46, 0x69, 0x78, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x8d, 0x01,
	0x2a, 0x74, 0x0a, 0x10, 0x45, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x50, 0x75, 0x6c, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f,
	0x48, 0x41, 0x50, 0x54, 0x49, 0x43, 0x5f, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x4c, 0x49, 0x47,
	0x48, 0x54, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f,
	0x48, 0x41, 0x50, 0x54, 0x49, 0x43, 0x5f, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44,
	0x5f, 0x48, 0x41, 0x50, 0x54, 0x49, 0x43, 0x5f, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x53, 0x54,
	0x52, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x42, 0x0c, 0x48, 0x01, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70,
	0x62, 0x80, 0x01, 0x00,
}

var (
	file_usermessages_proto_rawDescOnce sync.Once
	file_usermessages_proto_rawDescData = file_usermessages_proto_rawDesc
)

func file_usermessages_proto_rawDescGZIP() []byte {
	file_usermessages_proto_rawDescOnce.Do(func() {
		file_usermessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_usermessages_proto_rawDescData)
	})
	return file_usermessages_proto_rawDescData
}

var file_usermessages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_usermessages_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_usermessages_proto_goTypes = []interface{}{
	(EBaseUserMessages)(0),                                 // 0: mango.EBaseUserMessages
	(EBaseEntityMessages)(0),                               // 1: mango.EBaseEntityMessages
	(EHapticPulseType)(0),                                  // 2: mango.EHapticPulseType
	(*CUserMessageFade)(nil),                               // 3: mango.CUserMessageFade
	(*CUserMessageSayText2)(nil),                           // 4: mango.CUserMessageSayText2
	(*CUserMessageTextMsg)(nil),                            // 5: mango.CUserMessageTextMsg
	(*CUserMessageResetHUD)(nil),                           // 6: mango.CUserMessageResetHUD
	(*CUserMessageSendAudio)(nil),                          // 7: mango.CUserMessageSendAudio
	(*CUserMessageAudioParameter)(nil),                     // 8: mango.CUserMessageAudioParameter
	(*CUserMessageVoiceMask)(nil),                          // 9: mango.CUserMessageVoiceMask
	(*CEntityMessagePlayJingle)(nil),                       // 10: mango.CEntityMessagePlayJingle
	(*CUserMessageHapticPulse)(nil),                        // 11: mango.CUserMessageHapticPulse
	(*CEntityMessageScreenOverlay)(nil),                    // 12: mango.CEntityMessageScreenOverlay
	(*CEntityMessageRemoveAllDecals)(nil),                  // 13: mango.CEntityMessageRemoveAllDecals
	(*CEntityMessagePropagateForce)(nil),                   // 14: mango.CEntityMessagePropagateForce
	(*CEntityMessageDoSpark)(nil),                          // 15: mango.CEntityMessageDoSpark
	(*CEntityMessageFixAngle)(nil),                         // 16: mango.CEntityMessageFixAngle
	(*CUserMsg_HudError)(nil),                              // 17: mango.CUserMsg_HudError
	(*CUserMsg_CustomGameEvent_ClientToServer)(nil),        // 18: mango.CUserMsg_CustomGameEvent_ClientToServer
	(*CUserMsg_CustomGameEvent_ServerToClient)(nil),        // 19: mango.CUserMsg_CustomGameEvent_ServerToClient
	(*CUserMsg_TrackedControllerInput_ClientToServer)(nil), // 20: mango.CUserMsg_TrackedControllerInput_ClientToServer
	(*CEntityMsg)(nil),                                     // 21: mango.CEntityMsg
	(*CMsgVector)(nil),                                     // 22: mango.CMsgVector
	(*CMsgQAngle)(nil),                                     // 23: mango.CMsgQAngle
}
var file_usermessages_proto_depIdxs = []int32{
	21, // 0: mango.CEntityMessagePlayJingle.entity_msg:type_name -> mango.CEntityMsg
	2,  // 1: mango.CUserMessageHapticPulse.pulse_type:type_name -> mango.EHapticPulseType
	21, // 2: mango.CEntityMessageScreenOverlay.entity_msg:type_name -> mango.CEntityMsg
	21, // 3: mango.CEntityMessageRemoveAllDecals.entity_msg:type_name -> mango.CEntityMsg
	22, // 4: mango.CEntityMessagePropagateForce.impulse:type_name -> mango.CMsgVector
	21, // 5: mango.CEntityMessagePropagateForce.entity_msg:type_name -> mango.CEntityMsg
	22, // 6: mango.CEntityMessageDoSpark.origin:type_name -> mango.CMsgVector
	21, // 7: mango.CEntityMessageDoSpark.entity_msg:type_name -> mango.CEntityMsg
	23, // 8: mango.CEntityMessageFixAngle.angle:type_name -> mango.CMsgQAngle
	21, // 9: mango.CEntityMessageFixAngle.entity_msg:type_name -> mango.CEntityMsg
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_usermessages_proto_init() }
func file_usermessages_proto_init() {
	if File_usermessages_proto != nil {
		return
	}
	file_networkbasetypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_usermessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageFade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageSayText2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageTextMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageResetHUD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageSendAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageAudioParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageVoiceMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessagePlayJingle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageHapticPulse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageScreenOverlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageRemoveAllDecals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessagePropagateForce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageDoSpark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageFixAngle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_HudError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_CustomGameEvent_ClientToServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_CustomGameEvent_ServerToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_TrackedControllerInput_ClientToServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usermessages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_usermessages_proto_goTypes,
		DependencyIndexes: file_usermessages_proto_depIdxs,
		EnumInfos:         file_usermessages_proto_enumTypes,
		MessageInfos:      file_usermessages_proto_msgTypes,
	}.Build()
	File_usermessages_proto = out.File
	file_usermessages_proto_rawDesc = nil
	file_usermessages_proto_goTypes = nil
	file_usermessages_proto_depIdxs = nil
}
